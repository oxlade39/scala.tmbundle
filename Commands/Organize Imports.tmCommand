<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -w
#
# COPIED AND MODIFIED FROM THE JAVA BUNDLE BY MADS HARTMANN (MADS379@GMAIL.COM)
#
# WARNING: This script modifies the source of your file!!!  No one but
# yourself is responsible for it losing code.
#

require 'pp'

before, imports, after, all = [], [], [], []

STDIN.each do |line|
  all &lt;&lt; line
  
  if line =~ /\s*^import /
    imports &lt;&lt; line.strip
  elsif imports.empty? &amp;&amp; (before.empty? || !before.last.strip.empty?)
    before &lt;&lt; line
  elsif !imports.empty? &amp;&amp; after.empty?
    # remove empty lines after the imports and before anything else
    after &lt;&lt; line unless line.strip.empty?
  elsif
    after &lt;&lt; line
  end
end

if imports.empty?
  # if there are no imports just output the original lines and exit
  all.each { |line| puts line }
  exit 0
end

sorted = imports.sort
sorted.slice(0,sorted.size - 1).each do |line|
  print line + "\n"
end
print sorted[sorted.size-1]
</string>
	<key>fallbackInput</key>
	<string>none</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^O</string>
	<key>name</key>
	<string>Organize Imports</string>
	<key>output</key>
	<string>replaceSelectedText</string>
	<key>scope</key>
	<string>source.scala</string>
	<key>uuid</key>
	<string>5949EEB2-B50D-46D2-A67F-C27AD9BE2053</string>
</dict>
</plist>
